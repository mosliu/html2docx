<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>


    <contextName>logback</contextName>
    <!--<property name="log.path" value="E:\\test\\logback.log"/>-->

    <property name="NORMALLEVEL" value="WARN"/>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <springProperty scope="context" name="LOG_PATH" source="logging.path" defaultValue="logs"/>
    <springProperty scope="context" name="LOG_CONTEXT_NAME" source="spring.application.name" defaultValue="default"/>
    <springProperty scope="context" name="appname" source="spring.elk.index" defaultValue="dzyqdefault"/>
    <!--    <property name="LOG_HOME" value="/${LOG_PATH:/logs/}/${LOG_CONTEXT_NAME:default}"/>-->
    <property name="LOG_HOME" value="/${LOG_PATH}/${LOG_CONTEXT_NAME}"/>
    <!--<property name="LOG_HOME" value="/logs/${LOG_CONTEXT_NAME}"/>-->

    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>ERROR</level>
         </filter>-->
        <encoder>
            <!--<pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>-->
            <pattern>
                <!--%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-){faint}%clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}-->
                <!--%clr(%d{MM-dd HH:mm:ss}){faint}%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta}%clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}-->
                %clr(%d{MM-dd HH:mm:ss}){faint}%clr([%-15.15t]){cyan}%clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
            </pattern>
        </encoder>

        <!--<charset>UTF-8</charset> &lt;!&ndash; 此处设置字符集 &ndash;&gt;-->
    </appender>

    <!--输出到文件-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- encoder defaults to ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-60.60logger{59}
                :%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
            </pattern>
            <!--<charset>UTF-8</charset> &lt;!&ndash; 此处设置字符集 &ndash;&gt;-->
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
            <!-- 按天来回滚，如果需要按小时来回滚，则设置为{yyyy-MM-dd_HH} -->
            <fileNamePattern>${LOG_HOME}/log.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 如果按天来回滚，则最大保存时间为30天，30天之前的都将被清理掉 -->
            <maxHistory>10</maxHistory>
            <totalSizeCap>30GB</totalSizeCap>
        </rollingPolicy>


        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <!--日志文件最大的大小-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
        <!--<MaxFileSize>1GB</MaxFileSize>-->
        <!--</triggeringPolicy>-->

        <!-- Safely log to the same file from multiple JVMs. Degrades performance! -->
        <!-- 支持多JVM同时操作同一个日志文件 -->
        <prudent>true</prudent>
    </appender>

    <!-- 异步输出 -->
    <appender name="asyncfile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="file"/>
    </appender>


    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>10</MaxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
        <!--<MaxFileSize>500MB</MaxFileSize>-->
        <!--</triggeringPolicy>-->
        <!-- 所有error日志都在这里-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 异步输出 -->
    <appender name="asyncerror" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="error"/>
    </appender>

    <!--    <appender name="indep" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            日志文件输出的文件名-->
    <!--            <FileNamePattern>${LOG_HOME}/indep.%d{yyyy-MM-dd}.log</FileNamePattern>-->
    <!--日志文件保留天数-->
    <!--            <MaxHistory>30</MaxHistory>-->
    <!--            <totalSizeCap>2GB</totalSizeCap>-->
    <!--        </rollingPolicy>-->
    <!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
    <!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
    <!--        </encoder>-->
    <!--日志文件最大的大小-->
    <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
    <!--<MaxFileSize>500MB</MaxFileSize>-->
    <!--</triggeringPolicy>-->
    <!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
    <!--            <level>DEBUG</level>-->
    <!--        </filter>-->
    <!--    </appender>-->


    <!--======================================================= logger =======================================================-->
    <logger name="ch.qos.logback.classic.joran" level="${NORMALLEVEL}"/>
    <logger name="org.jboss.logging" level="${NORMALLEVEL}"/>
    <!--======================================================= hibernate =======================================================-->
    <logger name="org.hibernate.tool.hbm2ddl.TableMetadata" level="${NORMALLEVEL}"/>
    <logger name="org.hibernate" level="${NORMALLEVEL}"/>
    <!--======================================================= hikari =======================================================-->
    <logger name="com.zaxxer.hikari.pool.HikariPool" level="INFO"/>
    <!--======================================================= druid =======================================================-->
    <logger name="druid.sql" level="${NORMALLEVEL}"/>
    <!--<logger name="druid.sql.Statement" level="${NORMALLEVEL}"/>-->
    <logger name="druid.sql.Statement" level="info"/>
    <!--======================================================= thymeleaf =======================================================-->
    <logger name="org.thymeleaf" level="${NORMALLEVEL}"/>
    <logger name="nz.net.ultraq.thymeleaf" level="${NORMALLEVEL}"/>
    <logger name="com.github.dandelion" level="${NORMALLEVEL}"/>
    <!--======================================================= netflix =======================================================-->
    <logger name="com.netflix" level="INFO"/>
    <!--======================================================= apollo =======================================================-->
    <logger name="com.ctrip.framework.apollo" level="INFO"/>
    <logger name="com.ctrip.framework.apollo.internals.RemoteConfigRepository" level="INFO"/>
    <!--======================================================= quartz =======================================================-->
    <logger name="org.quartz" level="${NORMALLEVEL}"/>
    <!--======================================================= elasticsearch =======================================================-->
    <logger name="org.elasticsearch.common.network" level="INFO"/>
    <logger name="org.elasticsearch.threadpool.ThreadPool" level="INFO"/>
    <logger name="org.elasticsearch.plugins.PluginsService" level="${NORMALLEVEL}"/>
    <logger name="org.elasticsearch.transport.netty4" level="${NORMALLEVEL}"/>


    <!--======================================================= mail =======================================================-->
    <logger name="com.sun.mail.smtp" level="INFO"/>
    <!--======================================================= apache =======================================================-->
    <logger name="org.apache" level="${NORMALLEVEL}"/>
    <!--======================================================= org.apdplat.word =======================================================-->
    <logger name="org.apdplat.word" level="INFO"/>
    <!--======================================================= swagger =======================================================-->
    <logger name="springfox.documentation" level="INFO"/>
    <!--======================================================= ehcache =======================================================-->

    <logger name="net.sf.ehcache.pool" level="${NORMALLEVEL}"/>
    <logger name="org.terracotta" level="${NORMALLEVEL}"/>


    <!--======================================================= javax =======================================================-->
    <logger name="javax.activation" level="${NORMALLEVEL}"/>
    <logger name="javax.management" level="${NORMALLEVEL}"/>
    <logger name="sun.rmi" level="${NORMALLEVEL}"/>

    <!--======================================================= jndi =======================================================-->
    <logger name="org.springframework.jndi" level="${NORMALLEVEL}"/>
    <!--======================================================= spring security =======================================================-->
    <logger name="org.springframework.security" level="${NORMALLEVEL}"/>
    <!--======================================================= spring aop =======================================================-->
    <logger name="org.springframework.aop" level="${NORMALLEVEL}"/>
    <!--======================================================= spring boot =======================================================-->
    <logger name="org.springframework.boot" level="${NORMALLEVEL}"/>
    <!--======================================================= spring beans =======================================================-->
    <logger name="org.springframework.beans" level="${NORMALLEVEL}"/>
    <!--======================================================= spring core =======================================================-->
    <logger name="org.springframework.core" level="${NORMALLEVEL}"/>
    <!--======================================================= spring context =======================================================-->
    <logger name="org.springframework.context" level="${NORMALLEVEL}"/>
    <!--======================================================= spring data =======================================================-->
    <logger name="org.springframework.data" level="${NORMALLEVEL}"/>
    <!--======================================================= spring jdbc =======================================================-->
    <logger name="org.springframework.jdbc" level="${NORMALLEVEL}"/>
    <!--======================================================= spring jmx =======================================================-->
    <logger name="org.springframework.jmx" level="${NORMALLEVEL}"/>
    <!--======================================================= spring jpa =======================================================-->
    <logger name="org.springframework.jpa" level="${NORMALLEVEL}"/>
    <logger name="org.springframework.orm.jpa" level="${NORMALLEVEL}"/>

    <!--======================================================= spring scheduling =======================================================-->
    <logger name="org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor"
            level="${NORMALLEVEL}"/>
    <!--======================================================= spring mongo =======================================================-->
    <logger name="org.mongodb.driver" level="${NORMALLEVEL}"/>
    <!--======================================================= spring transaction =======================================================-->
    <logger name="org.springframework.transaction" level="${NORMALLEVEL}"/>
    <!--======================================================= spring util =======================================================-->
    <logger name="org.springframework.util.PropertyPlaceholderHelper" level="${NORMALLEVEL}"/>
    <!--======================================================= spring web =======================================================-->
    <logger name="org.springframework.web" level="${NORMALLEVEL}"/>
    <!--======================================================= spring kafka =======================================================-->
    <logger name="org.springframework.kafka.listener" level="${NORMALLEVEL}"/>
    <!--======================================================= spring zuul =======================================================-->
    <logger name="org.springframework.cloud.netflix.zuul.filters" level="INFO"/>
    <!--======================================================= redis about =======================================================-->
    <logger name="io.netty" level="${NORMALLEVEL}"/>
    <logger name="io.lettuce.core" level="${NORMALLEVEL}"/>
    <!--======================================================= org.apache.http =======================================================-->
    <logger name="org.apache.http.wire" level="${NORMALLEVEL}"/>
    <logger name="org.apache.poi" level="${NORMALLEVEL}"/>


    <root level="DEBUG">
        <appender-ref ref="console"/>
        <appender-ref ref="asyncfile"/>
        <appender-ref ref="asyncerror"/>
    </root>
</configuration>
